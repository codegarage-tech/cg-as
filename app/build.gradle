apply plugin: 'com.android.application'

android {

    compileSdkVersion appCompileSdkVersion
    buildToolsVersion appBuildToolsVersion

    signingConfigs {
        releaseConfig {
            try {
                keyAlias 'keydata.keystore'
                keyPassword KEY_PASSWORD
                storeFile file('../misc/keydata.keystore')
                storePassword STORE_PASSWORD
            } catch (ex) {
                throw new InvalidUserDataException("You should define KEY_PASSWORD and STORE_PASSWORD in gradle.properties.")
            }
        }
    }

    defaultConfig {
        applicationId "com.rc.abovesound"
        minSdkVersion appMinSdkVersion
        targetSdkVersion appTargetSdkVersion
        versionCode appVersionCode
        versionName appVersionName

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        // define your base Applications name here
        resValue 'string', 'app_name', 'AboveSound'
    }

    buildTypes {
        debug {
            shrinkResources false
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            shrinkResources true
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    //Flavor definition
    flavorDimensions "appType"
    productFlavors {
        pro {
            dimension "appType"
        }
    }

    //Format output
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            println variant

            //Rename the output apk file
            def appName = variant.mergedFlavor.resValues.get('app_name').getValue()
            def underScore = "_"
            def hyphen = "-"
            def flavor = variant.baseName.split("-")[0]
            def version = variant.versionName
            def buildType = variant.buildType.name
            def releaseApkName = appName + underScore + convertToCamelCase(flavor) + underScore + version + underScore + convertToCamelCase(buildType) + ".apk"
            outputFileName = releaseApkName

            // set new resVale
            def finalAppName = ""
            if (flavor.equals('pro')) {
                finalAppName = appName
            }
            variant.resValue 'string', 'app_name', finalAppName
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

def static String convertToCamelCase(String str) {
    if (str == null) {
        return null
    }

    boolean space = true
    StringBuilder builder = new StringBuilder(str)
    final int len = builder.length()

    for (int i = 0; i < len; ++i) {
        char c = builder.charAt(i)
        if (space) {
            if (!Character.isWhitespace(c)) {
                // Convert to title case and switch out of whitespace mode.
                builder.setCharAt(i, Character.toTitleCase(c))
                space = false
            }
        } else if (Character.isWhitespace(c)) {
            space = true
        } else {
            builder.setCharAt(i, Character.toLowerCase(c))
        }
    }

    return builder.toString()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:multidex:$multiDexVersion"
    implementation "com.android.support:appcompat-v7:$supportlibraryVersion"
    implementation "com.android.support:support-v4:$supportlibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportlibraryVersion"
    implementation "com.android.support:cardview-v7:$supportlibraryVersion"
    implementation "com.android.support:design:$supportlibraryVersion"
    implementation "com.android.support:support-media-compat:$supportlibraryVersion"
//    implementation group: 'com.android.support', name: 'support-v4', version: '28.0.0-alpha1'
    implementation 'com.google.android:flexbox:1.0.0'

    implementation project(":ShapeRippleLibrary")
    implementation project(":guillotine-menu")
//    implementation project(":ExoMedia")
    implementation project(":musicindicator")
    implementation project(":fabulousfilter")
    implementation project(":reminder")
    implementation project(":matisse")
    implementation project(":imagezipper")

    implementation 'com.reversecoder.permission:rc-permission:1.0.1-SNAPSHOT'
    implementation 'com.reversecoder.library:rc-library:1.0.1-SNAPSHOT'

    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation 'com.github.barteksc:android-pdf-viewer:3.1.0-beta.1'
    implementation 'com.mikhaellopez:circularprogressbar:2.0.0'
    //Paypal
    implementation "com.paypal.sdk:paypal-android-sdk:$paypalVersion"
    //Image loading
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    implementation 'com.devbrackets.android:exomedia:4.2.3'
}
